-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on Github at
--   <a>https://github.com/mstksg/hmatrix-backprop#readme</a>
@package hmatrix-backprop
@version 0.1.0.0

module Numeric.LinearAlgebra.Static.Backprop
data R (n :: Nat) :: Nat -> *
type ‚Ñù = Double
vec2 :: Reifies s W => BVar s ‚Ñù -> BVar s ‚Ñù -> BVar s (R 2)
vec3 :: Reifies s W => BVar s ‚Ñù -> BVar s ‚Ñù -> BVar s ‚Ñù -> BVar s (R 3)
vec4 :: Reifies s W => BVar s ‚Ñù -> BVar s ‚Ñù -> BVar s ‚Ñù -> BVar s ‚Ñù -> BVar s (R 4)
(&) :: (Reifies s W, KnownNat n, 1 <= n, KnownNat (n + 1)) => BVar s (R n) -> BVar s ‚Ñù -> BVar s (R (n + 1))
infixl 4 &
(#) :: (Reifies s W, KnownNat n, KnownNat m) => BVar s (R n) -> BVar s (R m) -> BVar s (R (n + m))
infixl 4 #
range :: KnownNat n => R n
dim :: KnownNat n => R n
data L (m :: Nat) (n :: Nat) :: Nat -> Nat -> *
type Sq (n :: Nat) = L n n
row :: (Reifies s W, KnownNat n) => BVar s (R n) -> BVar s (L 1 n)
col :: (Reifies s W, KnownNat n) => BVar s (R n) -> BVar s (L n 1)
(|||) :: (Reifies s W, KnownNat c, KnownNat r1, KnownNat (r1 + r2)) => BVar s (L c r1) -> BVar s (L c r2) -> BVar s (L c (r1 + r2))
(===) :: (Reifies s W, KnownNat c, KnownNat r1, KnownNat (r1 + r2)) => BVar s (L r1 c) -> BVar s (L r2 c) -> BVar s (L (r1 + r2) c)
tr :: (Reifies s W, Transposable m mt, Transposable mt m, Num m, Num mt) => BVar s m -> BVar s mt
eye :: KnownNat n => Sq n
diag :: (Reifies s W, KnownNat n) => BVar s (R n) -> BVar s (Sq n)
type ‚ÑÇ = Complex Double
data C (n :: Nat) :: Nat -> *
data M (m :: Nat) (n :: Nat) :: Nat -> Nat -> *
data Her (n :: Nat) :: Nat -> *
ùëñ :: Sized ‚ÑÇ s c => s
(<>) :: (Reifies s W, KnownNat m, KnownNat k, KnownNat n) => BVar s (L m k) -> BVar s (L k n) -> BVar s (L m n)
(#>) :: (Reifies s W, KnownNat m, KnownNat n) => BVar s (L m n) -> BVar s (R n) -> BVar s (R m)
(<.>) :: (Reifies s W, KnownNat n) => BVar s (R n) -> BVar s (R n) -> BVar s ‚Ñù
